---
import { PROJECTS } from '../constants/constants.astro';
import { ICONS } from '../constants/constants.astro';
import ArrowIcon from '../assets/icons/ArrowIcon.astro';
import GithubIcon from '../assets/icons/GithubIcon.astro';
---

{
  PROJECTS.map((project) => (
    <article class='flex-col flex gap-1 border-primary border-2 w-80 p-2  bg-white relative group overflow-hidden shadow opacity-0 '>
      <div class='w-full h-[200px] '>
        <img
          src={project.image}
          class='w-full h-full object-cover object-top'
        />

        <div class='absolute inset-0 bg-white flex flex-col justify-between gap-6 p-4 h-full transform translate-y-full  group-hover:translate-y-0 group-hover:opacity-100 transition-all duration-300 ease-in-out'>
          <div class='flex justify-between items-center  '>
            <h4 class='text-xl font-bold '>{project.title}</h4>
            <div class='flex items-center gap-1'>
              <a href={project.link} target='_blank' class='icon-projects'>
                <ArrowIcon
                  width='24px'
                  height='24px'
                  class=' hover:scale-110 transition-all duration-300'
                />
              </a>
              <a href={project.github} target='_blank' class='icon-projects'>
                <GithubIcon
                  width='24px'
                  class=' hover:scale-105 cursor-pointer transition-all duration-300'
                />
              </a>
            </div>
          </div>
          <p class='text-sm '>{project.description}</p>
          <div class='flex gap-2 mt-2'>
            {project.tags.map((tag) => {
              const Icon = ICONS[tag];
              return (
                <div class='flex items-center gap-1'>
                  {Icon && <Icon width='20px' height='20px' />}
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </article>
  ))
}
<style>
  .animation {
    animation: fade-in 0.6s linear;
  }

  @keyframes fade-in {
    from {
      scale: 0.8em;
      transform: translateY(30px);
      opacity: 0;
    }
    to {
      scale: 1em;
      opacity: 1;
      transform: translateY(0px);
    }
  }
</style>
<script>
  window.addEventListener('load', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animation');
          entry.target.classList.remove('opacity-0');

          observer.unobserve(entry.target);

          entry.target.addEventListener('animationend', () => {
            entry.target.classList.remove('animation');
          });
        }
      });
    });

    document.querySelectorAll('article').forEach((article) => {
      observer.observe(article);
    });
  });
</script>
